Graph {
node1 [label="continued_file_input ()"];
node2 [label="continued_file_input ()"];
node3 [label="continued_file_input (def)"];
node4 [label="NAME (merge_sort)"];
node5 [label="parameters (arr)"];
node6 [label="suite ()"];
node7 [label="expr_stmt (&quot;&quot;&quot;
    Merge sort implementation.
    
    Parameters:
    - arr (list): List of elements to be sorted.
    
    Returns:
    - None (List is sorted in-place).
    &quot;&quot;&quot;)"];
node8 [label="if_stmt (if)"];
node9 [label="test (>)"];
node10 [label="expr ()"];
node11 [label="NAME (len)"];
node12 [label="trailers (arr)"];
node13 [label="expr (1)"];
node14 [label="suite ()"];
node15 [label="expr_stmt (=)"];
node16 [label="testlist_star_expr (mid)"];
node17 [label="testlist_star_expr (//)"];
node18 [label="atom_expr ()"];
node19 [label="NAME (len)"];
node20 [label="trailers (arr)"];
node21 [label="atom_expr (2)"];
node22 [label="simple_stmt (=)"];
node23 [label="testlist_star_expr (left_half)"];
node24 [label="testlist_star_expr ()"];
node25 [label="NAME (arr)"];
node26 [label="trailers (:)"];
node27 [label="and_test (mid)"];
node28 [label="simple_stmt (=)"];
node29 [label="testlist_star_expr (right_half)"];
node30 [label="testlist_star_expr ()"];
node31 [label="NAME (arr)"];
node32 [label="trailers (:)"];
node33 [label="and_test (mid)"];
node34 [label="simple_stmt ()"];
node35 [label="NAME (merge_sort)"];
node36 [label="trailers (left_half)"];
node37 [label="simple_stmt ()"];
node38 [label="NAME (merge_sort)"];
node39 [label="trailers (right_half)"];
node40 [label="simple_stmt (=$=$=)"];
node41 [label="testlist_star_expr (i)"];
node42 [label="testlist_star_expr (j)"];
node43 [label="testlist_star_expr (k)"];
node44 [label="testlist_star_expr (0)"];
node45 [label="while_stmt (while)"];
node46 [label="test (and)"];
node47 [label="comparison (<)"];
node48 [label="expr (i)"];
node49 [label="expr ()"];
node50 [label="NAME (len)"];
node51 [label="trailers (left_half)"];
node52 [label="comparison (<)"];
node53 [label="expr (j)"];
node54 [label="expr ()"];
node55 [label="NAME (len)"];
node56 [label="trailers (right_half)"];
node57 [label="suite (if)"];
node58 [label="test (<)"];
node59 [label="expr ()"];
node60 [label="NAME (left_half)"];
node61 [label="trailers (i)"];
node62 [label="expr ()"];
node63 [label="NAME (right_half)"];
node64 [label="trailers (j)"];
node65 [label="suite ()"];
node66 [label="expr_stmt (=)"];
node67 [label="testlist_star_expr ()"];
node68 [label="NAME (arr)"];
node69 [label="trailers (k)"];
node70 [label="testlist_star_expr ()"];
node71 [label="NAME (left_half)"];
node72 [label="trailers (i)"];
node73 [label="simple_stmt (+=)"];
node74 [label="testlist_star_expr (i)"];
node75 [label="testlist (1)"];
node76 [label="else_stmt (else)"];
node77 [label="expr_stmt (=)"];
node78 [label="testlist_star_expr ()"];
node79 [label="NAME (arr)"];
node80 [label="trailers (k)"];
node81 [label="testlist_star_expr ()"];
node82 [label="NAME (right_half)"];
node83 [label="trailers (j)"];
node84 [label="simple_stmt (+=)"];
node85 [label="testlist_star_expr (j)"];
node86 [label="testlist (1)"];
node87 [label="simple_stmt (+=)"];
node88 [label="testlist_star_expr (k)"];
node89 [label="testlist (1)"];
node90 [label="while_stmt (while)"];
node91 [label="test (<)"];
node92 [label="expr (i)"];
node93 [label="expr ()"];
node94 [label="NAME (len)"];
node95 [label="trailers (left_half)"];
node96 [label="suite ()"];
node97 [label="expr_stmt (=)"];
node98 [label="testlist_star_expr ()"];
node99 [label="NAME (arr)"];
node100 [label="trailers (k)"];
node101 [label="testlist_star_expr ()"];
node102 [label="NAME (left_half)"];
node103 [label="trailers (i)"];
node104 [label="simple_stmt (+=)"];
node105 [label="testlist_star_expr (i)"];
node106 [label="testlist (1)"];
node107 [label="simple_stmt (+=)"];
node108 [label="testlist_star_expr (k)"];
node109 [label="testlist (1)"];
node110 [label="while_stmt (while)"];
node111 [label="test (<)"];
node112 [label="expr (j)"];
node113 [label="expr ()"];
node114 [label="NAME (len)"];
node115 [label="trailers (right_half)"];
node116 [label="suite ()"];
node117 [label="expr_stmt (=)"];
node118 [label="testlist_star_expr ()"];
node119 [label="NAME (arr)"];
node120 [label="trailers (k)"];
node121 [label="testlist_star_expr ()"];
node122 [label="NAME (right_half)"];
node123 [label="trailers (j)"];
node124 [label="simple_stmt (+=)"];
node125 [label="testlist_star_expr (j)"];
node126 [label="testlist (1)"];
node127 [label="simple_stmt (+=)"];
node128 [label="testlist_star_expr (k)"];
node129 [label="testlist (1)"];
node130 [label="funcdef (def)"];
node131 [label="NAME (main)"];
node132 [label="parameters ( () )"];
node133 [label="suite ()"];
node134 [label="expr_stmt ()"];
node135 [label="NAME (print)"];
node136 [label="trailers (''' This is a code 
          for merge sort, which
          return a sorted list from an unsorted list\n''')"];
node137 [label="simple_stmt (=)"];
node138 [label="testlist_star_expr (unsorted_list)"];
node139 [label="testlist_star_expr ( [] )"];
node140 [label="test (38)"];
node141 [label="test (27)"];
node142 [label="test (43)"];
node143 [label="test (3)"];
node144 [label="test (9)"];
node145 [label="test (82)"];
node146 [label="test (10)"];
node147 [label="simple_stmt ()"];
node148 [label="NAME (print)"];
node149 [label="trailers ()"];
node150 [label="test (&quot;Unsorted List:&quot;)"];
node151 [label="test (unsorted_list)"];
node152 [label="simple_stmt ()"];
node153 [label="NAME (merge_sort)"];
node154 [label="trailers (unsorted_list)"];
node155 [label="simple_stmt ()"];
node156 [label="NAME (print)"];
node157 [label="trailers ()"];
node158 [label="test (&quot;Sorted List:&quot;)"];
node159 [label="test (unsorted_list)"];
node160 [label="if_stmt (if)"];
node161 [label="test (==)"];
node162 [label="expr (__name__)"];
node163 [label="expr (&quot;__main__&quot;)"];
node164 [label="suite ()"];
node165 [label="NAME (main)"];
node166 [label="trailers ( () )"];

node1 -- node2;
node2 -- node3;
node3 -- node4;
node3 -- node5;
node3 -- node6;
node6 -- node7;
node6 -- node8;
node8 -- node9;
node9 -- node10;
node10 -- node11;
node10 -- node12;
node9 -- node13;
node8 -- node14;
node14 -- node15;
node15 -- node16;
node15 -- node17;
node17 -- node18;
node18 -- node19;
node18 -- node20;
node17 -- node21;
node14 -- node22;
node22 -- node23;
node22 -- node24;
node24 -- node25;
node24 -- node26;
node26 -- node27;
node14 -- node28;
node28 -- node29;
node28 -- node30;
node30 -- node31;
node30 -- node32;
node32 -- node33;
node14 -- node34;
node34 -- node35;
node34 -- node36;
node14 -- node37;
node37 -- node38;
node37 -- node39;
node14 -- node40;
node40 -- node41;
node40 -- node42;
node40 -- node43;
node40 -- node44;
node14 -- node45;
node45 -- node46;
node46 -- node47;
node47 -- node48;
node47 -- node49;
node49 -- node50;
node49 -- node51;
node46 -- node52;
node52 -- node53;
node52 -- node54;
node54 -- node55;
node54 -- node56;
node45 -- node57;
node57 -- node58;
node58 -- node59;
node59 -- node60;
node59 -- node61;
node58 -- node62;
node62 -- node63;
node62 -- node64;
node57 -- node65;
node65 -- node66;
node66 -- node67;
node67 -- node68;
node67 -- node69;
node66 -- node70;
node70 -- node71;
node70 -- node72;
node65 -- node73;
node73 -- node74;
node73 -- node75;
node57 -- node76;
node76 -- node77;
node77 -- node78;
node78 -- node79;
node78 -- node80;
node77 -- node81;
node81 -- node82;
node81 -- node83;
node76 -- node84;
node84 -- node85;
node84 -- node86;
node57 -- node87;
node87 -- node88;
node87 -- node89;
node14 -- node90;
node90 -- node91;
node91 -- node92;
node91 -- node93;
node93 -- node94;
node93 -- node95;
node90 -- node96;
node96 -- node97;
node97 -- node98;
node98 -- node99;
node98 -- node100;
node97 -- node101;
node101 -- node102;
node101 -- node103;
node96 -- node104;
node104 -- node105;
node104 -- node106;
node96 -- node107;
node107 -- node108;
node107 -- node109;
node14 -- node110;
node110 -- node111;
node111 -- node112;
node111 -- node113;
node113 -- node114;
node113 -- node115;
node110 -- node116;
node116 -- node117;
node117 -- node118;
node118 -- node119;
node118 -- node120;
node117 -- node121;
node121 -- node122;
node121 -- node123;
node116 -- node124;
node124 -- node125;
node124 -- node126;
node116 -- node127;
node127 -- node128;
node127 -- node129;
node2 -- node130;
node130 -- node131;
node130 -- node132;
node130 -- node133;
node133 -- node134;
node134 -- node135;
node134 -- node136;
node133 -- node137;
node137 -- node138;
node137 -- node139;
node139 -- node140;
node139 -- node141;
node139 -- node142;
node139 -- node143;
node139 -- node144;
node139 -- node145;
node139 -- node146;
node133 -- node147;
node147 -- node148;
node147 -- node149;
node149 -- node150;
node149 -- node151;
node133 -- node152;
node152 -- node153;
node152 -- node154;
node133 -- node155;
node155 -- node156;
node155 -- node157;
node157 -- node158;
node157 -- node159;
node1 -- node160;
node160 -- node161;
node161 -- node162;
node161 -- node163;
node160 -- node164;
node164 -- node165;
node164 -- node166;

}
